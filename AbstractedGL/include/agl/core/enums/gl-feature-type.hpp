#pragma once
#include <cstdint>
#include <glad/glad.h>

namespace agl
{
	enum gl_feature_type : std::uint32_t
	{
		FEATURE_BLEND = GL_BLEND,
		FEATURE_COLOR_LOGIC_OP = GL_COLOR_LOGIC_OP,
		FEATURE_CULL_FACE = GL_CULL_FACE,
		FEATURE_DEBUG_OUTPUT = GL_DEBUG_OUTPUT,
		FEATURE_DEBUG_OUTPUT_SYNCHRONOUS = GL_DEBUG_OUTPUT_SYNCHRONOUS,
		FEATURE_DEPTH_CLAMP = GL_DEPTH_CLAMP,
		FEATURE_DEPTH_TEST = GL_DEPTH_TEST,
		FEATURE_DITHER = GL_DITHER,
		FEATURE_FRAMEBUFFER_SRGB = GL_FRAMEBUFFER_SRGB,
		FEATURE_LINE_SMOOTH = GL_LINE_SMOOTH,
		FEATURE_MULTISAMPLE = GL_MULTISAMPLE,
		FEATURE_POLYGON_OFFSET_FILL = GL_POLYGON_OFFSET_FILL,
		FEATURE_POLYGON_OFFSET_LINE = GL_POLYGON_OFFSET_LINE,
		FEATURE_POLYGON_OFFSET_POINT = GL_POLYGON_OFFSET_POINT,
		FEATURE_POLYGON_SMOOTH = GL_POLYGON_SMOOTH,
		FEATURE_PRIMITIVE_RESTART = GL_PRIMITIVE_RESTART,
		FEATURE_PRIMITIVE_RESTART_FIXED_INDEX = GL_PRIMITIVE_RESTART_FIXED_INDEX,
		FEATURE_RASTERIZER_DISCARD = GL_RASTERIZER_DISCARD,
		FEATURE_SAMPLE_ALPHA_TO_COVERAGE = GL_SAMPLE_ALPHA_TO_COVERAGE,
		FEATURE_SAMPLE_ALPHA_TO_ONE = GL_SAMPLE_ALPHA_TO_ONE,
		FEATURE_SAMPLE_COVERAGE = GL_SAMPLE_COVERAGE,
		FEATURE_SAMPLE_SHADING = GL_SAMPLE_SHADING,
		FEATURE_SAMPLE_MASK = GL_SAMPLE_MASK,
		FEATURE_SCISSOR_TEST = GL_SCISSOR_TEST,
		FEATURE_STENCIL_TEST = GL_STENCIL_TEST,
		FEATURE_TEXTURE_CUBE_MAP_SEAMLESS = GL_TEXTURE_CUBE_MAP_SEAMLESS,
		FEATURE_PROGRAM_POINT_SIZE = GL_PROGRAM_POINT_SIZE,
	};
}

